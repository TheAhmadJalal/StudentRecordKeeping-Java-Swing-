/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package internal;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
 
public class Frame1_viewstd extends javax.swing.JInternalFrame {
 
      public Frame1_viewstd(Object object[]) {
        initComponents();
         setVisible(true);
       
      //  editRecord(object);
    }
      
      public boolean action()
      {
          showRecord();
          if(viewTable.getRowCount()!=0)
          {
          return true;
          }
        
            return false;
      }
      public void editRecord(Object object[])
      {
          
          Object tbData[]=new Object[object.length];
          System.out.println(object.length);
          for(int i=0;i<object.length;i++)
          {
              tbData[i]=object[i];
              System.out.println(tbData[i]);
                      
          }
            DefaultTableModel tbmodel=(DefaultTableModel)viewTable.getModel();
              tbmodel.addRow(tbData);
      }
    public Frame1_viewstd() {
        initComponents(); 
//           this.remove(this);
//         this.revalidate();
        //     setBounds(0,0,700,700);
     //   setTitle("AddStudent");
     //   setResizable(true);
    //    setVisible(true);
       // setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);  
       setBounds(350,0,700,700);
       showRecord(); 
     
    }
 public  void showRecord()
    {
          try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3308/user?useSSL=false", "root", "ahmad1122");
           String sql = "Select * from student";
          PreparedStatement pst = conn.prepareStatement(sql);
          ResultSet rs=pst.executeQuery();
       
while(rs.next())
{
        String stname=rs.getString("stname");
        String FName=rs.getString("FName");
        String DOB=rs.getString("DOB");
        String BForm=rs.getString("BForm");
        String gender=rs.getString("gender");
        String StMobile=rs.getString("StMobile");
        String FCNIC=rs.getString("FCNIC");
        String FMobile=rs.getString("FMobile");
        String Program=rs.getString("Program");
        String P=rs.getString("Package");
        int Package=Integer.parseInt(P);
        String F=rs.getString("FirstInstallment");
        int FirstInstallment=Integer.parseInt(F);
        
        String M=rs.getString("MatricRoll");
        int MatricRoll=Integer.parseInt(M);
        
        String DateOfAdmission=rs.getString("DateOfAdmission");
        String matricmarks=rs.getString("MatricMarks");
        int MatricMarks=Integer.parseInt(matricmarks);
               
        String AdmissionBy=rs.getString("AdmissionBy");
        String ApproachedBy=rs.getString("ApproachedBy");
        String EnteredBy=rs.getString("EnteredBy");
        String Status=rs.getString("Status");

      Object tbData[]= {stname,FName,DOB,BForm,StMobile,FCNIC,FMobile,
      Program,Package,FirstInstallment,MatricRoll,DateOfAdmission ,MatricMarks,
      AdmissionBy,ApproachedBy,EnteredBy,Status,gender};
     
//   String []a={"ali","ahmad","ali","ahmad","ali","ahmad","ali","ahmad","ali","ahmad","ali","ahmad","ali","ahmad","ali","ahmad","ali","ahmad"};
       
     DefaultTableModel tbmodel=(DefaultTableModel)viewTable.getModel();
     tbmodel.addRow(tbData);

}
                conn.close();
            
            
        }
        catch(Exception e)
                {
                    e.printStackTrace();
                }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        viewTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(51, 51, 51));
        setClosable(true);
        setTitle("ViewAllStudent");
        setOpaque(true);
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVisible(true);

        jLabel1.setBackground(new java.awt.Color(255, 51, 51));
        jLabel1.setFont(new java.awt.Font("Georgia", 1, 42)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Students Record");

        viewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student Name", "FatherName", "DOB", "BFormNo", "Student Mobile ", "Father CNIC", "Father Mobile", "Program", "Package", "First Installment", "Matric Roll No", "Matric Marks", "Date of Admission", "Admission By", "Approached By", "Entered By", "Status", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        viewTable.setAutoResizeMode(0);
        viewTable.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane2.setViewportView(viewTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable viewTable;
    // End of variables declaration//GEN-END:variables

//    public void setter(Frame3_editRecord frm3) {
//       // throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
//        System.out.println("heloo");
//    }
}
